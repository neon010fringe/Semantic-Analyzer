State 68 conflicts: 4 shift/reduce
State 69 conflicts: 13 reduce/reduce
State 70 conflicts: 4 shift/reduce
State 71 conflicts: 13 reduce/reduce
State 85 conflicts: 1 shift/reduce
State 87 conflicts: 4 shift/reduce
State 119 conflicts: 1 shift/reduce
State 120 conflicts: 5 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'
    3                | FUNCTION IDENTIFIER parameter_list RETURNS type ';'
    4                | error ';'

    5 parameter_list: parameter_list ',' parameter
    6               | parameter

    7 parameter: IDENTIFIER ':' type

    8 type: INTEGER
    9     | CHARACTER
   10     | REAL

   11 optional_variable: variables
   12                  | ε

   13 variables: variables variable
   14          | variable

   15 variable: IDENTIFIER ':' type IS statement ';'
   16         | IDENTIFIER ':' LIST OF type IS list ';'

   17 list: '(' expressions ')'

   18 expressions: expressions ',' expression
   19            | expression

   20 body: BEGIN_ statement_ END ';'

   21 statement_: statement ';'
   22           | error ';'

   23 statement: expression
   24          | when_statement
   25          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   26          | if_statement
   27          | FOLD direction operator list_choice ENDFOLD

   28 if_statement: IF condition THEN statement_ elsif_clauses else_clause ENDIF

   29 elsif_clauses: elsif_clauses ELSIF condition THEN statement_
   30              | ε

   31 else_clause: ELSE when_statement
   32            | ELSE statement_
   33            | ε

   34 list_choice: '(' expressions ')'
   35            | IDENTIFIER

   36 operator: ADDOP
   37         | MULOP
   38         | RELOP
   39         | '-'

   40 direction: LEFT
   41          | RIGHT

   42 cases: cases case
   43      | case
   44      | error ';'
   45      | ε

   46 case: CASE INT_LITERAL ARROW statement ';'

   47 condition: condition ANDOP relation
   48          | relation

   49 relation: '(' condition ')'
   50         | NOTOP relation
   51         | expression RELOP expression

   52 expression: expression ADDOP term
   53           | expression RELOP term
   54           | expression OROP term
   55           | NEGOP expression
   56           | NOTOP expression
   57           | expression ANDOP term
   58           | term

   59 term: term MULOP primary
   60     | term MODOP primary
   61     | primary

   62 primary: '(' expression ')'
   63        | INT_LITERAL
   64        | HEXINT
   65        | REALIT
   66        | CHAR_LITERAL
   67        | list_index
   68        | IDENTIFIER
   69        | NEGOP primary
   70        | NOTOP primary

   71 list_index: IDENTIFIER '(' expression ')'

   72 when_statement: WHEN condition ',' expression ':' expression


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 17 34 49 62 71
    ')' (41) 17 34 49 62 71
    ',' (44) 5 18 72
    '-' (45) 39
    ':' (58) 7 15 16 72
    ';' (59) 2 3 4 15 16 20 21 22 25 44 46
    error (256) 4 22 44
    IDENTIFIER <iden> (258) 2 3 7 15 16 35 68 71
    INT_LITERAL <type> (259) 46 63
    CHAR_LITERAL <type> (260) 66
    ADDOP <type> (261) 36 52
    MULOP <type> (262) 37 59
    RELOP <type> (263) 38 51 53
    MODOP <type> (264) 60
    ANDOP (265) 47 57
    ARROW (266) 25 46
    BEGIN_ (267) 20
    CASE (268) 46
    CHARACTER (269) 9
    ELSE (270) 31 32
    END (271) 20
    ENDSWITCH (272) 25
    FUNCTION (273) 2 3
    INTEGER (274) 8
    IS (275) 15 16 25
    LIST (276) 16
    OF (277) 16
    OTHERS (278) 25
    RETURNS (279) 2 3
    SWITCH (280) 25
    WHEN (281) 72
    REAL (282) 10
    IF (283) 28
    THEN (284) 28 29
    ELSIF (285) 29
    ENDIF (286) 28
    FOLD (287) 27
    ENDFOLD (288) 27
    NEGOP (289) 55 69
    OROP (290) 54
    LEFT (291) 40
    RIGHT (292) 41
    NOTOP (293) 50 56 70
    HEXINT (294) 64
    REALIT (295) 65


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function <type> (48)
        on left: 1
        on right: 0
    function_header <type> (49)
        on left: 2 3 4
        on right: 1
    parameter_list (50)
        on left: 5 6
        on right: 3 5
    parameter (51)
        on left: 7
        on right: 5 6
    type <type> (52)
        on left: 8 9 10
        on right: 2 3 7 15 16
    optional_variable (53)
        on left: 11 12
        on right: 1
    variables (54)
        on left: 13 14
        on right: 11 13
    variable (55)
        on left: 15 16
        on right: 13 14
    list <type> (56)
        on left: 17
        on right: 16
    expressions <type> (57)
        on left: 18 19
        on right: 17 18 34
    body <type> (58)
        on left: 20
        on right: 1
    statement_ <type> (59)
        on left: 21 22
        on right: 20 28 29 32
    statement <type> (60)
        on left: 23 24 25 26 27
        on right: 15 21 25 46
    if_statement <type> (61)
        on left: 28
        on right: 26
    elsif_clauses <type> (62)
        on left: 29 30
        on right: 28 29
    else_clause <type> (63)
        on left: 31 32 33
        on right: 28
    list_choice <type> (64)
        on left: 34 35
        on right: 27
    operator <type> (65)
        on left: 36 37 38 39
        on right: 27
    direction <type> (66)
        on left: 40 41
        on right: 27
    cases <type> (67)
        on left: 42 43 44 45
        on right: 25 42
    case <type> (68)
        on left: 46
        on right: 42 43
    condition <type> (69)
        on left: 47 48
        on right: 28 29 47 49 72
    relation <type> (70)
        on left: 49 50 51
        on right: 47 48 50
    expression <type> (71)
        on left: 52 53 54 55 56 57 58
        on right: 18 19 23 25 51 52 53 54 55 56 57 62 71 72
    term <type> (72)
        on left: 59 60 61
        on right: 52 53 54 57 58 59 60
    primary <type> (73)
        on left: 62 63 64 65 66 67 68 69 70
        on right: 59 60 61 69 70
    list_index <type> (74)
        on left: 71
        on right: 67
    when_statement <type> (75)
        on left: 72
        on right: 24 31


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    4 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'
    3                | FUNCTION • IDENTIFIER parameter_list RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 12 (optional_variable)

    optional_variable  go to state 9
    variables          go to state 10
    variable           go to state 11


State 5

    4 function_header: error ';' •

    $default  reduce using rule 4 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'
    3                | FUNCTION IDENTIFIER • parameter_list RETURNS type ';'

    IDENTIFIER  shift, and go to state 12
    RETURNS     shift, and go to state 13

    parameter_list  go to state 14
    parameter       go to state 15


State 7

    0 $accept: function $end •

    $default  accept


State 8

   15 variable: IDENTIFIER • ':' type IS statement ';'
   16         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 16


State 9

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 17

    body  go to state 18


State 10

   11 optional_variable: variables •
   13 variables: variables • variable

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 11 (optional_variable)

    variable  go to state 19


State 11

   14 variables: variable •

    $default  reduce using rule 14 (variables)


State 12

    7 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 20


State 13

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 21
    INTEGER    shift, and go to state 22
    REAL       shift, and go to state 23

    type  go to state 24


State 14

    3 function_header: FUNCTION IDENTIFIER parameter_list • RETURNS type ';'
    5 parameter_list: parameter_list • ',' parameter

    RETURNS  shift, and go to state 25
    ','      shift, and go to state 26


State 15

    6 parameter_list: parameter •

    $default  reduce using rule 6 (parameter_list)


State 16

   15 variable: IDENTIFIER ':' • type IS statement ';'
   16         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 21
    INTEGER    shift, and go to state 22
    LIST       shift, and go to state 27
    REAL       shift, and go to state 23

    type  go to state 28


State 17

   20 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 29
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    SWITCH        shift, and go to state 33
    WHEN          shift, and go to state 34
    IF            shift, and go to state 35
    FOLD          shift, and go to state 36
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    statement_      go to state 42
    statement       go to state 43
    if_statement    go to state 44
    expression      go to state 45
    term            go to state 46
    primary         go to state 47
    list_index      go to state 48
    when_statement  go to state 49


State 18

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 19

   13 variables: variables variable •

    $default  reduce using rule 13 (variables)


State 20

    7 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 21
    INTEGER    shift, and go to state 22
    REAL       shift, and go to state 23

    type  go to state 50


State 21

    9 type: CHARACTER •

    $default  reduce using rule 9 (type)


State 22

    8 type: INTEGER •

    $default  reduce using rule 8 (type)


State 23

   10 type: REAL •

    $default  reduce using rule 10 (type)


State 24

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 51


State 25

    3 function_header: FUNCTION IDENTIFIER parameter_list RETURNS • type ';'

    CHARACTER  shift, and go to state 21
    INTEGER    shift, and go to state 22
    REAL       shift, and go to state 23

    type  go to state 52


State 26

    5 parameter_list: parameter_list ',' • parameter

    IDENTIFIER  shift, and go to state 12

    parameter  go to state 53


State 27

   16 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 54


State 28

   15 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 55


State 29

   22 statement_: error • ';'

    ';'  shift, and go to state 56


State 30

   68 primary: IDENTIFIER •
   71 list_index: IDENTIFIER • '(' expression ')'

    '('  shift, and go to state 57

    $default  reduce using rule 68 (primary)


State 31

   63 primary: INT_LITERAL •

    $default  reduce using rule 63 (primary)


State 32

   66 primary: CHAR_LITERAL •

    $default  reduce using rule 66 (primary)


State 33

   25 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 58
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 34

   72 when_statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 59
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 60

    condition   go to state 61
    relation    go to state 62
    expression  go to state 63
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 35

   28 if_statement: IF • condition THEN statement_ elsif_clauses else_clause ENDIF

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 59
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 60

    condition   go to state 64
    relation    go to state 62
    expression  go to state 63
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 36

   27 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 65
    RIGHT  shift, and go to state 66

    direction  go to state 67


State 37

   55 expression: NEGOP • expression
   69 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 68
    term        go to state 46
    primary     go to state 69
    list_index  go to state 48


State 38

   56 expression: NOTOP • expression
   70 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 70
    term        go to state 46
    primary     go to state 71
    list_index  go to state 48


State 39

   64 primary: HEXINT •

    $default  reduce using rule 64 (primary)


State 40

   65 primary: REALIT •

    $default  reduce using rule 65 (primary)


State 41

   62 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 72
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 42

   20 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 73


State 43

   21 statement_: statement • ';'

    ';'  shift, and go to state 74


State 44

   26 statement: if_statement •

    $default  reduce using rule 26 (statement)


State 45

   23 statement: expression •
   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78

    $default  reduce using rule 23 (statement)


State 46

   58 expression: term •
   59 term: term • MULOP primary
   60     | term • MODOP primary

    MULOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 58 (expression)


State 47

   61 term: primary •

    $default  reduce using rule 61 (term)


State 48

   67 primary: list_index •

    $default  reduce using rule 67 (primary)


State 49

   24 statement: when_statement •

    $default  reduce using rule 24 (statement)


State 50

    7 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 7 (parameter)


State 51

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 52

    3 function_header: FUNCTION IDENTIFIER parameter_list RETURNS type • ';'

    ';'  shift, and go to state 81


State 53

    5 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 5 (parameter_list)


State 54

   16 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 21
    INTEGER    shift, and go to state 22
    REAL       shift, and go to state 23

    type  go to state 82


State 55

   15 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    SWITCH        shift, and go to state 33
    WHEN          shift, and go to state 34
    IF            shift, and go to state 35
    FOLD          shift, and go to state 36
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    statement       go to state 83
    if_statement    go to state 44
    expression      go to state 45
    term            go to state 46
    primary         go to state 47
    list_index      go to state 48
    when_statement  go to state 49


State 56

   22 statement_: error ';' •

    $default  reduce using rule 22 (statement_)


State 57

   71 list_index: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 84
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 58

   25 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    IS     shift, and go to state 85
    OROP   shift, and go to state 78


State 59

   50 relation: NOTOP • relation
   56 expression: NOTOP • expression
   70 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 59
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 60

    relation    go to state 86
    expression  go to state 87
    term        go to state 46
    primary     go to state 71
    list_index  go to state 48


State 60

   49 relation: '(' • condition ')'
   62 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 59
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 60

    condition   go to state 88
    relation    go to state 62
    expression  go to state 89
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 61

   47 condition: condition • ANDOP relation
   72 when_statement: WHEN condition • ',' expression ':' expression

    ANDOP  shift, and go to state 90
    ','    shift, and go to state 91


State 62

   48 condition: relation •

    $default  reduce using rule 48 (condition)


State 63

   51 relation: expression • RELOP expression
   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 92
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78


State 64

   28 if_statement: IF condition • THEN statement_ elsif_clauses else_clause ENDIF
   47 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 90
    THEN   shift, and go to state 93


State 65

   40 direction: LEFT •

    $default  reduce using rule 40 (direction)


State 66

   41 direction: RIGHT •

    $default  reduce using rule 41 (direction)


State 67

   27 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 94
    MULOP  shift, and go to state 95
    RELOP  shift, and go to state 96
    '-'    shift, and go to state 97

    operator  go to state 98


State 68

   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   55           | NEGOP expression •
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78

    ADDOP     [reduce using rule 55 (expression)]
    RELOP     [reduce using rule 55 (expression)]
    ANDOP     [reduce using rule 55 (expression)]
    OROP      [reduce using rule 55 (expression)]
    $default  reduce using rule 55 (expression)


State 69

   61 term: primary •
   69 primary: NEGOP primary •

    ADDOP     reduce using rule 61 (term)
    ADDOP     [reduce using rule 69 (primary)]
    MULOP     reduce using rule 61 (term)
    MULOP     [reduce using rule 69 (primary)]
    RELOP     reduce using rule 61 (term)
    RELOP     [reduce using rule 69 (primary)]
    MODOP     reduce using rule 61 (term)
    MODOP     [reduce using rule 69 (primary)]
    ANDOP     reduce using rule 61 (term)
    ANDOP     [reduce using rule 69 (primary)]
    IS        reduce using rule 61 (term)
    IS        [reduce using rule 69 (primary)]
    THEN      reduce using rule 61 (term)
    THEN      [reduce using rule 69 (primary)]
    ENDIF     reduce using rule 61 (term)
    ENDIF     [reduce using rule 69 (primary)]
    OROP      reduce using rule 61 (term)
    OROP      [reduce using rule 69 (primary)]
    ';'       reduce using rule 61 (term)
    ';'       [reduce using rule 69 (primary)]
    ','       reduce using rule 61 (term)
    ','       [reduce using rule 69 (primary)]
    ':'       reduce using rule 61 (term)
    ':'       [reduce using rule 69 (primary)]
    ')'       reduce using rule 61 (term)
    ')'       [reduce using rule 69 (primary)]
    $default  reduce using rule 61 (term)


State 70

   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   56           | NOTOP expression •
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78

    ADDOP     [reduce using rule 56 (expression)]
    RELOP     [reduce using rule 56 (expression)]
    ANDOP     [reduce using rule 56 (expression)]
    OROP      [reduce using rule 56 (expression)]
    $default  reduce using rule 56 (expression)


State 71

   61 term: primary •
   70 primary: NOTOP primary •

    ADDOP     reduce using rule 61 (term)
    ADDOP     [reduce using rule 70 (primary)]
    MULOP     reduce using rule 61 (term)
    MULOP     [reduce using rule 70 (primary)]
    RELOP     reduce using rule 61 (term)
    RELOP     [reduce using rule 70 (primary)]
    MODOP     reduce using rule 61 (term)
    MODOP     [reduce using rule 70 (primary)]
    ANDOP     reduce using rule 61 (term)
    ANDOP     [reduce using rule 70 (primary)]
    IS        reduce using rule 61 (term)
    IS        [reduce using rule 70 (primary)]
    THEN      reduce using rule 61 (term)
    THEN      [reduce using rule 70 (primary)]
    ENDIF     reduce using rule 61 (term)
    ENDIF     [reduce using rule 70 (primary)]
    OROP      reduce using rule 61 (term)
    OROP      [reduce using rule 70 (primary)]
    ';'       reduce using rule 61 (term)
    ';'       [reduce using rule 70 (primary)]
    ','       reduce using rule 61 (term)
    ','       [reduce using rule 70 (primary)]
    ':'       reduce using rule 61 (term)
    ':'       [reduce using rule 70 (primary)]
    ')'       reduce using rule 61 (term)
    ')'       [reduce using rule 70 (primary)]
    $default  reduce using rule 61 (term)


State 72

   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term
   62 primary: '(' expression • ')'

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78
    ')'    shift, and go to state 99


State 73

   20 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 100


State 74

   21 statement_: statement ';' •

    $default  reduce using rule 21 (statement_)


State 75

   52 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 101
    NOTOP         shift, and go to state 102
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    term        go to state 103
    primary     go to state 47
    list_index  go to state 48


State 76

   53 expression: expression RELOP • term

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 101
    NOTOP         shift, and go to state 102
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    term        go to state 104
    primary     go to state 47
    list_index  go to state 48


State 77

   57 expression: expression ANDOP • term

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 101
    NOTOP         shift, and go to state 102
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    term        go to state 105
    primary     go to state 47
    list_index  go to state 48


State 78

   54 expression: expression OROP • term

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 101
    NOTOP         shift, and go to state 102
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    term        go to state 106
    primary     go to state 47
    list_index  go to state 48


State 79

   59 term: term MULOP • primary

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 101
    NOTOP         shift, and go to state 102
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    primary     go to state 107
    list_index  go to state 48


State 80

   60 term: term MODOP • primary

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 101
    NOTOP         shift, and go to state 102
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    primary     go to state 108
    list_index  go to state 48


State 81

    3 function_header: FUNCTION IDENTIFIER parameter_list RETURNS type ';' •

    $default  reduce using rule 3 (function_header)


State 82

   16 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 109


State 83

   15 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 110


State 84

   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term
   71 list_index: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78
    ')'    shift, and go to state 111


State 85

   25 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    error  shift, and go to state 112
    CASE   shift, and go to state 113

    CASE    [reduce using rule 45 (cases)]
    OTHERS  reduce using rule 45 (cases)

    cases  go to state 114
    case   go to state 115


State 86

   50 relation: NOTOP relation •

    $default  reduce using rule 50 (relation)


State 87

   51 relation: expression • RELOP expression
   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   56           | NOTOP expression •
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 92
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78

    ADDOP     [reduce using rule 56 (expression)]
    RELOP     [reduce using rule 56 (expression)]
    ANDOP     [reduce using rule 56 (expression)]
    OROP      [reduce using rule 56 (expression)]
    $default  reduce using rule 56 (expression)


State 88

   47 condition: condition • ANDOP relation
   49 relation: '(' condition • ')'

    ANDOP  shift, and go to state 90
    ')'    shift, and go to state 116


State 89

   51 relation: expression • RELOP expression
   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term
   62 primary: '(' expression • ')'

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 92
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78
    ')'    shift, and go to state 99


State 90

   47 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 59
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 60

    relation    go to state 117
    expression  go to state 63
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 91

   72 when_statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 118
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 92

   51 relation: expression RELOP • expression
   53 expression: expression RELOP • term

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 119
    term        go to state 120
    primary     go to state 47
    list_index  go to state 48


State 93

   28 if_statement: IF condition THEN • statement_ elsif_clauses else_clause ENDIF

    error         shift, and go to state 29
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    SWITCH        shift, and go to state 33
    WHEN          shift, and go to state 34
    IF            shift, and go to state 35
    FOLD          shift, and go to state 36
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    statement_      go to state 121
    statement       go to state 43
    if_statement    go to state 44
    expression      go to state 45
    term            go to state 46
    primary         go to state 47
    list_index      go to state 48
    when_statement  go to state 49


State 94

   36 operator: ADDOP •

    $default  reduce using rule 36 (operator)


State 95

   37 operator: MULOP •

    $default  reduce using rule 37 (operator)


State 96

   38 operator: RELOP •

    $default  reduce using rule 38 (operator)


State 97

   39 operator: '-' •

    $default  reduce using rule 39 (operator)


State 98

   27 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 122
    '('         shift, and go to state 123

    list_choice  go to state 124


State 99

   62 primary: '(' expression ')' •

    $default  reduce using rule 62 (primary)


State 100

   20 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 20 (body)


State 101

   69 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 101
    NOTOP         shift, and go to state 102
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    primary     go to state 125
    list_index  go to state 48


State 102

   70 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 101
    NOTOP         shift, and go to state 102
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    primary     go to state 126
    list_index  go to state 48


State 103

   52 expression: expression ADDOP term •
   59 term: term • MULOP primary
   60     | term • MODOP primary

    MULOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 52 (expression)


State 104

   53 expression: expression RELOP term •
   59 term: term • MULOP primary
   60     | term • MODOP primary

    MULOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 53 (expression)


State 105

   57 expression: expression ANDOP term •
   59 term: term • MULOP primary
   60     | term • MODOP primary

    MULOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 57 (expression)


State 106

   54 expression: expression OROP term •
   59 term: term • MULOP primary
   60     | term • MODOP primary

    MULOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 54 (expression)


State 107

   59 term: term MULOP primary •

    $default  reduce using rule 59 (term)


State 108

   60 term: term MODOP primary •

    $default  reduce using rule 60 (term)


State 109

   16 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 127

    list  go to state 128


State 110

   15 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 15 (variable)


State 111

   71 list_index: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 71 (list_index)


State 112

   44 cases: error • ';'

    ';'  shift, and go to state 129


State 113

   46 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 130


State 114

   25 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   42 cases: cases • case

    CASE    shift, and go to state 113
    OTHERS  shift, and go to state 131

    case  go to state 132


State 115

   43 cases: case •

    $default  reduce using rule 43 (cases)


State 116

   49 relation: '(' condition ')' •

    $default  reduce using rule 49 (relation)


State 117

   47 condition: condition ANDOP relation •

    $default  reduce using rule 47 (condition)


State 118

   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term
   72 when_statement: WHEN condition ',' expression • ':' expression

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78
    ':'    shift, and go to state 133


State 119

   51 relation: expression RELOP expression •
   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78

    ANDOP     [reduce using rule 51 (relation)]
    $default  reduce using rule 51 (relation)


State 120

   53 expression: expression RELOP term •
   58           | term •
   59 term: term • MULOP primary
   60     | term • MODOP primary

    MULOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    ADDOP     reduce using rule 53 (expression)
    ADDOP     [reduce using rule 58 (expression)]
    RELOP     reduce using rule 53 (expression)
    RELOP     [reduce using rule 58 (expression)]
    ANDOP     reduce using rule 53 (expression)
    ANDOP     [reduce using rule 58 (expression)]
    THEN      reduce using rule 58 (expression)
    OROP      reduce using rule 53 (expression)
    OROP      [reduce using rule 58 (expression)]
    ','       reduce using rule 58 (expression)
    ')'       reduce using rule 53 (expression)
    ')'       [reduce using rule 58 (expression)]
    $default  reduce using rule 53 (expression)


State 121

   28 if_statement: IF condition THEN statement_ • elsif_clauses else_clause ENDIF

    $default  reduce using rule 30 (elsif_clauses)

    elsif_clauses  go to state 134


State 122

   35 list_choice: IDENTIFIER •

    $default  reduce using rule 35 (list_choice)


State 123

   34 list_choice: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expressions  go to state 135
    expression   go to state 136
    term         go to state 46
    primary      go to state 47
    list_index   go to state 48


State 124

   27 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 137


State 125

   69 primary: NEGOP primary •

    $default  reduce using rule 69 (primary)


State 126

   70 primary: NOTOP primary •

    $default  reduce using rule 70 (primary)


State 127

   17 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expressions  go to state 138
    expression   go to state 136
    term         go to state 46
    primary      go to state 47
    list_index   go to state 48


State 128

   16 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 139


State 129

   44 cases: error ';' •

    $default  reduce using rule 44 (cases)


State 130

   46 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 140


State 131

   25 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 141


State 132

   42 cases: cases case •

    $default  reduce using rule 42 (cases)


State 133

   72 when_statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 142
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 134

   28 if_statement: IF condition THEN statement_ elsif_clauses • else_clause ENDIF
   29 elsif_clauses: elsif_clauses • ELSIF condition THEN statement_

    ELSE   shift, and go to state 143
    ELSIF  shift, and go to state 144

    $default  reduce using rule 33 (else_clause)

    else_clause  go to state 145


State 135

   18 expressions: expressions • ',' expression
   34 list_choice: '(' expressions • ')'

    ','  shift, and go to state 146
    ')'  shift, and go to state 147


State 136

   19 expressions: expression •
   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78

    $default  reduce using rule 19 (expressions)


State 137

   27 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 27 (statement)


State 138

   17 list: '(' expressions • ')'
   18 expressions: expressions • ',' expression

    ','  shift, and go to state 146
    ')'  shift, and go to state 148


State 139

   16 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 16 (variable)


State 140

   46 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    SWITCH        shift, and go to state 33
    WHEN          shift, and go to state 34
    IF            shift, and go to state 35
    FOLD          shift, and go to state 36
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    statement       go to state 149
    if_statement    go to state 44
    expression      go to state 45
    term            go to state 46
    primary         go to state 47
    list_index      go to state 48
    when_statement  go to state 49


State 141

   25 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    SWITCH        shift, and go to state 33
    WHEN          shift, and go to state 34
    IF            shift, and go to state 35
    FOLD          shift, and go to state 36
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    statement       go to state 150
    if_statement    go to state 44
    expression      go to state 45
    term            go to state 46
    primary         go to state 47
    list_index      go to state 48
    when_statement  go to state 49


State 142

   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term
   72 when_statement: WHEN condition ',' expression ':' expression •

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78

    $default  reduce using rule 72 (when_statement)


State 143

   31 else_clause: ELSE • when_statement
   32            | ELSE • statement_

    error         shift, and go to state 29
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    SWITCH        shift, and go to state 33
    WHEN          shift, and go to state 34
    IF            shift, and go to state 35
    FOLD          shift, and go to state 36
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    statement_      go to state 151
    statement       go to state 43
    if_statement    go to state 44
    expression      go to state 45
    term            go to state 46
    primary         go to state 47
    list_index      go to state 48
    when_statement  go to state 152


State 144

   29 elsif_clauses: elsif_clauses ELSIF • condition THEN statement_

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 59
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 60

    condition   go to state 153
    relation    go to state 62
    expression  go to state 63
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 145

   28 if_statement: IF condition THEN statement_ elsif_clauses else_clause • ENDIF

    ENDIF  shift, and go to state 154


State 146

   18 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    expression  go to state 155
    term        go to state 46
    primary     go to state 47
    list_index  go to state 48


State 147

   34 list_choice: '(' expressions ')' •

    $default  reduce using rule 34 (list_choice)


State 148

   17 list: '(' expressions ')' •

    $default  reduce using rule 17 (list)


State 149

   46 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 156


State 150

   25 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 157


State 151

   32 else_clause: ELSE statement_ •

    $default  reduce using rule 32 (else_clause)


State 152

   24 statement: when_statement •
   31 else_clause: ELSE when_statement •

    ENDIF     reduce using rule 31 (else_clause)
    $default  reduce using rule 24 (statement)


State 153

   29 elsif_clauses: elsif_clauses ELSIF condition • THEN statement_
   47 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 90
    THEN   shift, and go to state 158


State 154

   28 if_statement: IF condition THEN statement_ elsif_clauses else_clause ENDIF •

    $default  reduce using rule 28 (if_statement)


State 155

   18 expressions: expressions ',' expression •
   52 expression: expression • ADDOP term
   53           | expression • RELOP term
   54           | expression • OROP term
   57           | expression • ANDOP term

    ADDOP  shift, and go to state 75
    RELOP  shift, and go to state 76
    ANDOP  shift, and go to state 77
    OROP   shift, and go to state 78

    $default  reduce using rule 18 (expressions)


State 156

   46 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 46 (case)


State 157

   25 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 159


State 158

   29 elsif_clauses: elsif_clauses ELSIF condition THEN • statement_

    error         shift, and go to state 29
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    CHAR_LITERAL  shift, and go to state 32
    SWITCH        shift, and go to state 33
    WHEN          shift, and go to state 34
    IF            shift, and go to state 35
    FOLD          shift, and go to state 36
    NEGOP         shift, and go to state 37
    NOTOP         shift, and go to state 38
    HEXINT        shift, and go to state 39
    REALIT        shift, and go to state 40
    '('           shift, and go to state 41

    statement_      go to state 160
    statement       go to state 43
    if_statement    go to state 44
    expression      go to state 45
    term            go to state 46
    primary         go to state 47
    list_index      go to state 48
    when_statement  go to state 49


State 159

   25 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 25 (statement)


State 160

   29 elsif_clauses: elsif_clauses ELSIF condition THEN statement_ •

    $default  reduce using rule 29 (elsif_clauses)
